/*
 * This file is generated by jOOQ.
*/
package ${package}.database.or.pg_catalog.tables.records;


import ${package}.database.or.pg_catalog.tables.PgStatDatabase;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatDatabaseRecord extends TableRecordImpl<PgStatDatabaseRecord> implements Record19<Long, String, Integer, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Double, Double, OffsetDateTime> {

    private static final long serialVersionUID = -1613300665;

    /**
     * Setter for <code>pg_catalog.pg_stat_database.datid</code>.
     */
    public void setDatid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.datid</code>.
     */
    public Long getDatid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.datname</code>.
     */
    public void setDatname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.datname</code>.
     */
    public String getDatname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.numbackends</code>.
     */
    public void setNumbackends(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.numbackends</code>.
     */
    public Integer getNumbackends() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.xact_commit</code>.
     */
    public void setXactCommit(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.xact_commit</code>.
     */
    public BigDecimal getXactCommit() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.xact_rollback</code>.
     */
    public void setXactRollback(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.xact_rollback</code>.
     */
    public BigDecimal getXactRollback() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.blks_read</code>.
     */
    public void setBlksRead(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.blks_read</code>.
     */
    public BigDecimal getBlksRead() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.blks_hit</code>.
     */
    public void setBlksHit(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.blks_hit</code>.
     */
    public BigDecimal getBlksHit() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.tup_returned</code>.
     */
    public void setTupReturned(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.tup_returned</code>.
     */
    public BigDecimal getTupReturned() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.tup_fetched</code>.
     */
    public void setTupFetched(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.tup_fetched</code>.
     */
    public BigDecimal getTupFetched() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.tup_inserted</code>.
     */
    public void setTupInserted(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.tup_inserted</code>.
     */
    public BigDecimal getTupInserted() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.tup_updated</code>.
     */
    public void setTupUpdated(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.tup_updated</code>.
     */
    public BigDecimal getTupUpdated() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.tup_deleted</code>.
     */
    public void setTupDeleted(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.tup_deleted</code>.
     */
    public BigDecimal getTupDeleted() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.conflicts</code>.
     */
    public void setConflicts(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.conflicts</code>.
     */
    public BigDecimal getConflicts() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.temp_files</code>.
     */
    public void setTempFiles(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.temp_files</code>.
     */
    public BigDecimal getTempFiles() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.temp_bytes</code>.
     */
    public void setTempBytes(BigDecimal value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.temp_bytes</code>.
     */
    public BigDecimal getTempBytes() {
        return (BigDecimal) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.deadlocks</code>.
     */
    public void setDeadlocks(BigDecimal value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.deadlocks</code>.
     */
    public BigDecimal getDeadlocks() {
        return (BigDecimal) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.blk_read_time</code>.
     */
    public void setBlkReadTime(Double value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.blk_read_time</code>.
     */
    public Double getBlkReadTime() {
        return (Double) get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.blk_write_time</code>.
     */
    public void setBlkWriteTime(Double value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.blk_write_time</code>.
     */
    public Double getBlkWriteTime() {
        return (Double) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_database.stats_reset</code>.
     */
    public void setStatsReset(OffsetDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_database.stats_reset</code>.
     */
    public OffsetDateTime getStatsReset() {
        return (OffsetDateTime) get(18);
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, String, Integer, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Double, Double, OffsetDateTime> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, String, Integer, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Double, Double, OffsetDateTime> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PgStatDatabase.PG_STAT_DATABASE.DATID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PgStatDatabase.PG_STAT_DATABASE.DATNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return PgStatDatabase.PG_STAT_DATABASE.NUMBACKENDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return PgStatDatabase.PG_STAT_DATABASE.XACT_COMMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return PgStatDatabase.PG_STAT_DATABASE.XACT_ROLLBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return PgStatDatabase.PG_STAT_DATABASE.BLKS_READ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return PgStatDatabase.PG_STAT_DATABASE.BLKS_HIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return PgStatDatabase.PG_STAT_DATABASE.TUP_RETURNED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return PgStatDatabase.PG_STAT_DATABASE.TUP_FETCHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field10() {
        return PgStatDatabase.PG_STAT_DATABASE.TUP_INSERTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field11() {
        return PgStatDatabase.PG_STAT_DATABASE.TUP_UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field12() {
        return PgStatDatabase.PG_STAT_DATABASE.TUP_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field13() {
        return PgStatDatabase.PG_STAT_DATABASE.CONFLICTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field14() {
        return PgStatDatabase.PG_STAT_DATABASE.TEMP_FILES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field15() {
        return PgStatDatabase.PG_STAT_DATABASE.TEMP_BYTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field16() {
        return PgStatDatabase.PG_STAT_DATABASE.DEADLOCKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field17() {
        return PgStatDatabase.PG_STAT_DATABASE.BLK_READ_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field18() {
        return PgStatDatabase.PG_STAT_DATABASE.BLK_WRITE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field19() {
        return PgStatDatabase.PG_STAT_DATABASE.STATS_RESET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getDatid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDatname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getNumbackends();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getXactCommit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getXactRollback();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getBlksRead();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getBlksHit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getTupReturned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component9() {
        return getTupFetched();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component10() {
        return getTupInserted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component11() {
        return getTupUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component12() {
        return getTupDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component13() {
        return getConflicts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component14() {
        return getTempFiles();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component15() {
        return getTempBytes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component16() {
        return getDeadlocks();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component17() {
        return getBlkReadTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component18() {
        return getBlkWriteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component19() {
        return getStatsReset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getDatid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDatname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNumbackends();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getXactCommit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getXactRollback();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getBlksRead();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getBlksHit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getTupReturned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getTupFetched();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value10() {
        return getTupInserted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value11() {
        return getTupUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value12() {
        return getTupDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value13() {
        return getConflicts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value14() {
        return getTempFiles();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value15() {
        return getTempBytes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value16() {
        return getDeadlocks();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value17() {
        return getBlkReadTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value18() {
        return getBlkWriteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value19() {
        return getStatsReset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value1(Long value) {
        setDatid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value2(String value) {
        setDatname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value3(Integer value) {
        setNumbackends(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value4(BigDecimal value) {
        setXactCommit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value5(BigDecimal value) {
        setXactRollback(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value6(BigDecimal value) {
        setBlksRead(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value7(BigDecimal value) {
        setBlksHit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value8(BigDecimal value) {
        setTupReturned(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value9(BigDecimal value) {
        setTupFetched(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value10(BigDecimal value) {
        setTupInserted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value11(BigDecimal value) {
        setTupUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value12(BigDecimal value) {
        setTupDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value13(BigDecimal value) {
        setConflicts(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value14(BigDecimal value) {
        setTempFiles(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value15(BigDecimal value) {
        setTempBytes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value16(BigDecimal value) {
        setDeadlocks(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value17(Double value) {
        setBlkReadTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value18(Double value) {
        setBlkWriteTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord value19(OffsetDateTime value) {
        setStatsReset(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatDatabaseRecord values(Long value1, String value2, Integer value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9, BigDecimal value10, BigDecimal value11, BigDecimal value12, BigDecimal value13, BigDecimal value14, BigDecimal value15, BigDecimal value16, Double value17, Double value18, OffsetDateTime value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatDatabaseRecord
     */
    public PgStatDatabaseRecord() {
        super(PgStatDatabase.PG_STAT_DATABASE);
    }

    /**
     * Create a detached, initialised PgStatDatabaseRecord
     */
    public PgStatDatabaseRecord(Long datid, String datname, Integer numbackends, BigDecimal xactCommit, BigDecimal xactRollback, BigDecimal blksRead, BigDecimal blksHit, BigDecimal tupReturned, BigDecimal tupFetched, BigDecimal tupInserted, BigDecimal tupUpdated, BigDecimal tupDeleted, BigDecimal conflicts, BigDecimal tempFiles, BigDecimal tempBytes, BigDecimal deadlocks, Double blkReadTime, Double blkWriteTime, OffsetDateTime statsReset) {
        super(PgStatDatabase.PG_STAT_DATABASE);

        set(0, datid);
        set(1, datname);
        set(2, numbackends);
        set(3, xactCommit);
        set(4, xactRollback);
        set(5, blksRead);
        set(6, blksHit);
        set(7, tupReturned);
        set(8, tupFetched);
        set(9, tupInserted);
        set(10, tupUpdated);
        set(11, tupDeleted);
        set(12, conflicts);
        set(13, tempFiles);
        set(14, tempBytes);
        set(15, deadlocks);
        set(16, blkReadTime);
        set(17, blkWriteTime);
        set(18, statsReset);
    }
}
