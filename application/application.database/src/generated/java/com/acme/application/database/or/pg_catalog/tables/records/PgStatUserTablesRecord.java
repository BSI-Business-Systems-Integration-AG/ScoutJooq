/*
 * This file is generated by jOOQ.
*/
package com.acme.application.database.or.pg_catalog.tables.records;


import com.acme.application.database.or.pg_catalog.tables.PgStatUserTables;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatUserTablesRecord extends TableRecordImpl<PgStatUserTablesRecord> implements Record22<Long, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 751779505;

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.relid</code>.
     */
    public void setRelid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.relid</code>.
     */
    public Long getRelid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.schemaname</code>.
     */
    public void setSchemaname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.schemaname</code>.
     */
    public String getSchemaname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.relname</code>.
     */
    public void setRelname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.relname</code>.
     */
    public String getRelname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.seq_scan</code>.
     */
    public void setSeqScan(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.seq_scan</code>.
     */
    public BigDecimal getSeqScan() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.seq_tup_read</code>.
     */
    public void setSeqTupRead(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.seq_tup_read</code>.
     */
    public BigDecimal getSeqTupRead() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.idx_scan</code>.
     */
    public void setIdxScan(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.idx_scan</code>.
     */
    public BigDecimal getIdxScan() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.idx_tup_fetch</code>.
     */
    public void setIdxTupFetch(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.idx_tup_fetch</code>.
     */
    public BigDecimal getIdxTupFetch() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_tup_ins</code>.
     */
    public void setNTupIns(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_tup_ins</code>.
     */
    public BigDecimal getNTupIns() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_tup_upd</code>.
     */
    public void setNTupUpd(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_tup_upd</code>.
     */
    public BigDecimal getNTupUpd() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_tup_del</code>.
     */
    public void setNTupDel(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_tup_del</code>.
     */
    public BigDecimal getNTupDel() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_tup_hot_upd</code>.
     */
    public void setNTupHotUpd(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_tup_hot_upd</code>.
     */
    public BigDecimal getNTupHotUpd() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_live_tup</code>.
     */
    public void setNLiveTup(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_live_tup</code>.
     */
    public BigDecimal getNLiveTup() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_dead_tup</code>.
     */
    public void setNDeadTup(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_dead_tup</code>.
     */
    public BigDecimal getNDeadTup() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.n_mod_since_analyze</code>.
     */
    public void setNModSinceAnalyze(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.n_mod_since_analyze</code>.
     */
    public BigDecimal getNModSinceAnalyze() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.last_vacuum</code>.
     */
    public void setLastVacuum(OffsetDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.last_vacuum</code>.
     */
    public OffsetDateTime getLastVacuum() {
        return (OffsetDateTime) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.last_autovacuum</code>.
     */
    public void setLastAutovacuum(OffsetDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.last_autovacuum</code>.
     */
    public OffsetDateTime getLastAutovacuum() {
        return (OffsetDateTime) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.last_analyze</code>.
     */
    public void setLastAnalyze(OffsetDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.last_analyze</code>.
     */
    public OffsetDateTime getLastAnalyze() {
        return (OffsetDateTime) get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.last_autoanalyze</code>.
     */
    public void setLastAutoanalyze(OffsetDateTime value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.last_autoanalyze</code>.
     */
    public OffsetDateTime getLastAutoanalyze() {
        return (OffsetDateTime) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.vacuum_count</code>.
     */
    public void setVacuumCount(BigDecimal value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.vacuum_count</code>.
     */
    public BigDecimal getVacuumCount() {
        return (BigDecimal) get(18);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.autovacuum_count</code>.
     */
    public void setAutovacuumCount(BigDecimal value) {
        set(19, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.autovacuum_count</code>.
     */
    public BigDecimal getAutovacuumCount() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.analyze_count</code>.
     */
    public void setAnalyzeCount(BigDecimal value) {
        set(20, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.analyze_count</code>.
     */
    public BigDecimal getAnalyzeCount() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_user_tables.autoanalyze_count</code>.
     */
    public void setAutoanalyzeCount(BigDecimal value) {
        set(21, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_user_tables.autoanalyze_count</code>.
     */
    public BigDecimal getAutoanalyzeCount() {
        return (BigDecimal) get(21);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Long, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Long, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, BigDecimal, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PgStatUserTables.PG_STAT_USER_TABLES.RELID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PgStatUserTables.PG_STAT_USER_TABLES.SCHEMANAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PgStatUserTables.PG_STAT_USER_TABLES.RELNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return PgStatUserTables.PG_STAT_USER_TABLES.SEQ_SCAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return PgStatUserTables.PG_STAT_USER_TABLES.SEQ_TUP_READ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return PgStatUserTables.PG_STAT_USER_TABLES.IDX_SCAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return PgStatUserTables.PG_STAT_USER_TABLES.IDX_TUP_FETCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_TUP_INS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_TUP_UPD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field10() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_TUP_DEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field11() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_TUP_HOT_UPD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field12() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_LIVE_TUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field13() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_DEAD_TUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field14() {
        return PgStatUserTables.PG_STAT_USER_TABLES.N_MOD_SINCE_ANALYZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field15() {
        return PgStatUserTables.PG_STAT_USER_TABLES.LAST_VACUUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field16() {
        return PgStatUserTables.PG_STAT_USER_TABLES.LAST_AUTOVACUUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field17() {
        return PgStatUserTables.PG_STAT_USER_TABLES.LAST_ANALYZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field18() {
        return PgStatUserTables.PG_STAT_USER_TABLES.LAST_AUTOANALYZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field19() {
        return PgStatUserTables.PG_STAT_USER_TABLES.VACUUM_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field20() {
        return PgStatUserTables.PG_STAT_USER_TABLES.AUTOVACUUM_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field21() {
        return PgStatUserTables.PG_STAT_USER_TABLES.ANALYZE_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field22() {
        return PgStatUserTables.PG_STAT_USER_TABLES.AUTOANALYZE_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getRelid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSchemaname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRelname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getSeqScan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getSeqTupRead();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getIdxScan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getIdxTupFetch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getNTupIns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component9() {
        return getNTupUpd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component10() {
        return getNTupDel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component11() {
        return getNTupHotUpd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component12() {
        return getNLiveTup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component13() {
        return getNDeadTup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component14() {
        return getNModSinceAnalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component15() {
        return getLastVacuum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component16() {
        return getLastAutovacuum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component17() {
        return getLastAnalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component18() {
        return getLastAutoanalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component19() {
        return getVacuumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component20() {
        return getAutovacuumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component21() {
        return getAnalyzeCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component22() {
        return getAutoanalyzeCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getRelid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSchemaname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRelname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getSeqScan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getSeqTupRead();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getIdxScan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getIdxTupFetch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getNTupIns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getNTupUpd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value10() {
        return getNTupDel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value11() {
        return getNTupHotUpd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value12() {
        return getNLiveTup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value13() {
        return getNDeadTup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value14() {
        return getNModSinceAnalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value15() {
        return getLastVacuum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value16() {
        return getLastAutovacuum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value17() {
        return getLastAnalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value18() {
        return getLastAutoanalyze();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value19() {
        return getVacuumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value20() {
        return getAutovacuumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value21() {
        return getAnalyzeCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value22() {
        return getAutoanalyzeCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value1(Long value) {
        setRelid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value2(String value) {
        setSchemaname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value3(String value) {
        setRelname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value4(BigDecimal value) {
        setSeqScan(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value5(BigDecimal value) {
        setSeqTupRead(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value6(BigDecimal value) {
        setIdxScan(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value7(BigDecimal value) {
        setIdxTupFetch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value8(BigDecimal value) {
        setNTupIns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value9(BigDecimal value) {
        setNTupUpd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value10(BigDecimal value) {
        setNTupDel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value11(BigDecimal value) {
        setNTupHotUpd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value12(BigDecimal value) {
        setNLiveTup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value13(BigDecimal value) {
        setNDeadTup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value14(BigDecimal value) {
        setNModSinceAnalyze(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value15(OffsetDateTime value) {
        setLastVacuum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value16(OffsetDateTime value) {
        setLastAutovacuum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value17(OffsetDateTime value) {
        setLastAnalyze(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value18(OffsetDateTime value) {
        setLastAutoanalyze(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value19(BigDecimal value) {
        setVacuumCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value20(BigDecimal value) {
        setAutovacuumCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value21(BigDecimal value) {
        setAnalyzeCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord value22(BigDecimal value) {
        setAutoanalyzeCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgStatUserTablesRecord values(Long value1, String value2, String value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9, BigDecimal value10, BigDecimal value11, BigDecimal value12, BigDecimal value13, BigDecimal value14, OffsetDateTime value15, OffsetDateTime value16, OffsetDateTime value17, OffsetDateTime value18, BigDecimal value19, BigDecimal value20, BigDecimal value21, BigDecimal value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatUserTablesRecord
     */
    public PgStatUserTablesRecord() {
        super(PgStatUserTables.PG_STAT_USER_TABLES);
    }

    /**
     * Create a detached, initialised PgStatUserTablesRecord
     */
    public PgStatUserTablesRecord(Long relid, String schemaname, String relname, BigDecimal seqScan, BigDecimal seqTupRead, BigDecimal idxScan, BigDecimal idxTupFetch, BigDecimal nTupIns, BigDecimal nTupUpd, BigDecimal nTupDel, BigDecimal nTupHotUpd, BigDecimal nLiveTup, BigDecimal nDeadTup, BigDecimal nModSinceAnalyze, OffsetDateTime lastVacuum, OffsetDateTime lastAutovacuum, OffsetDateTime lastAnalyze, OffsetDateTime lastAutoanalyze, BigDecimal vacuumCount, BigDecimal autovacuumCount, BigDecimal analyzeCount, BigDecimal autoanalyzeCount) {
        super(PgStatUserTables.PG_STAT_USER_TABLES);

        set(0, relid);
        set(1, schemaname);
        set(2, relname);
        set(3, seqScan);
        set(4, seqTupRead);
        set(5, idxScan);
        set(6, idxTupFetch);
        set(7, nTupIns);
        set(8, nTupUpd);
        set(9, nTupDel);
        set(10, nTupHotUpd);
        set(11, nLiveTup);
        set(12, nDeadTup);
        set(13, nModSinceAnalyze);
        set(14, lastVacuum);
        set(15, lastAutovacuum);
        set(16, lastAnalyze);
        set(17, lastAutoanalyze);
        set(18, vacuumCount);
        set(19, autovacuumCount);
        set(20, analyzeCount);
        set(21, autoanalyzeCount);
    }
}
